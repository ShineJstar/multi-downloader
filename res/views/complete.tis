class CompleteView : Element {
    this var tasktable;

    function attached() {
        this.$(#task-table).content(<VTable multiselect sortable recordset={ this.preProcess(runtime.apptasks) } @{ this.tasktable }>
            <columns>
                <th>标题</th>
                <th>完成时间</th>
                <th>操作</th>
            </columns>
            {
                function(record, index) {
                    return
                        <tr key={ record.key }
                            :current={ this.isCurrent(record) }
                            :checked={ this.isSelected(record) }>
                            <td.title title={ record.title }>{ record.title }</td>
                            <td>{ (new Date(record.create_at)).toString("%Y-%m-%d %H:%M:%S") }</td>
                            <td.opt>
                                <button#task-file title="打开文件" path={ record._taskFileBtnPath } class={ record._taskFileBtnClass }><icon.icon-file /></button>
                                <button#task-folder title="打开下载目录" path={ record.path }><icon.icon-folder /></button>
                                <button#task-info title="任务属性" index={ index }><icon.icon-info /></button>
                            </td>
                        </tr>
                }
            }
        </VTable>);
        this.timer(2s, function() {
            this.tasktable.update({ recordset: preProcess(runtime.apptasks) });
            return true;
        });
    }

    function preProcess(tasks) {
        var result = [];
        for (var task in tasks) {
            if (task.status == "done") {
                task.key = task.id;
                task._taskFileBtnPath = task.subtasks.length === 1 ? task.path + "/" + task.subtasks[0].filename : "";
                task._taskFileBtnClass = task.subtasks.length === 1 ? "visible" : "hidden";

                result.push(task);
            }
        }
        return result;
    }

    // get ids of task to be operatted by toolbar
    function getOptTasks(vtable) {
        var ids = [];
        var currentRecordKey = vtable.currentRecord === null ? "" : vtable.currentRecord.key;
        var selectedRecordKeys = Object.keys(vtable.selectedRecords);

        if (selectedRecordKeys.length > 0) {
            ids = selectedRecordKeys;
        } else if (currentRecordKey != "") {
            ids = [currentRecordKey, ];
        }
        return ids;
    }

    function setToolbarState(vtable) {
        var ids = getOptTasks(vtable);
        $(button#delete-task).state.disabled = ids.length == 0;
        $(button#remove-task).state.disabled = ids.length == 0;
    }

    event mouseup $(#task-table tbody > tr) { setToolbarState(this.tasktable); }
    event keyup $(#task-table tbody) { setToolbarState(this.tasktable); }
    event click $(button#select-all) { setToolbarState(this.tasktable); }

    event click $(button#add-task) {
        var url = view.dialog({
            url: self.url("components/dialog-task-add.htm"),
            width: 400,
            alignment: 5,
            parameters: {filters: runtime.urlfilters},
        });
        if (url) {
            runtime.postEvent("task-added", url);
            $(main aside li[href]:first-child).sendEvent("click");
        }
    }

    event click $(button#delete-task, menu>li[command=delete-task]) {
        var ids = getOptTasks(this.tasktable);
        var r = view.msgbox({
            type: #question,
            title: "删除任务",
            content: String.printf("<p>确定要删除选中的 %d 项任务吗？</p><small>硬盘上的文件不会被删除</small>", ids.length),
            buttons: [
                {id:#cancel, text:"取消", role:"cancel-button"},
                {id:#yes, text:"确定", role:"default-button"},
            ],
        });
        if (r == #yes) {
            runtime.postEvent("task-deleted", ids);
            this.tasktable.selectedRecords = {};
            this.tasktable.currentRecord = null;
        }
    }

    event click $(button#remove-task, menu>li[command=remove-task]) {
        var ids = getOptTasks(this.tasktable);
        var r = view.msgbox({
            type: #question,
            title: "彻底删除任务",
            content: String.printf("<p>确定要删除选中的 %d 项任务吗？</p><small>硬盘上的文件也会被删除</small>", ids.length),
            buttons: [
                {id:#cancel, text:"取消", role:"cancel-button"},
                {id:#yes, text:"确定", role:"default-button"},
            ],
        });
        if (r == #yes) {
            runtime.postEvent("task-removed", ids);
            this.tasktable.selectedRecords = {};
            this.tasktable.currentRecord = null;
        }
    }

    event click $(button#select-all) {
        if (this.tasktable.selectedRecords.length == this.tasktable.recordset.length) {
            this.tasktable.selectedRecords = {};
        } else {
            function reducer(map, record) { map[record.key] = record; return map; }
            this.tasktable.selectedRecords = this.tasktable.recordset.reduce(reducer, {});
        }
    }

    event click $(button#exit-app) { view.close(); }

    event click $(button#task-file) (evt,e) {
        Sciter.launch(e.attributes["path"]);
    }

    event click $(button#task-folder) (evt,e) {
        Sciter.launch(e.attributes["path"]);
    }

    event click $(button#task-info) (evt,e) {
        var idx = e.attributes["index"].toInteger();
        view.dialog({
            url: self.url("components/dialog-task-info.htm"),
            width: 500,
            height: 580,
            alignment: -8,
            parameters: this.tasktable.recordset[idx],
        });
    }

    event contextmenusetup $(table tr) (evt,e) {
        var menu = evt.source;
        var isMulti = getOptTasks(this.tasktable).length > 1;
        
        menu.$(li[command=task-file]).attributes["hidden"] = isMulti || this.tasktable.currentRecord.subtasks.length !== 1 ? true : undefined;
        menu.$(li[command=task-folder]).attributes["hidden"] = isMulti ? true : undefined;
    }

    event click $(menu>li[command=task-file]) {
        var task = this.tasktable.currentRecord;
        var path = task.subtasks.length === 1 ? task.path + "/" + task.subtasks[0].filename : "";
        Sciter.launch(path);
    }

    event click $(menu>li[command=task-folder]) {
        Sciter.launch(this.tasktable.currentRecord.path);
    }

    event click $(menu>li[command=copy-link]) {
        view.clipboard(#put, this.tasktable.currentRecord.url);
        this.postEvent("toast", {type:"info", msg:"已复制到剪切板！"});
    }
    
}
